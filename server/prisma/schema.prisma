generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int       @id @default(autoincrement())
  name               String
  email              String       @unique
  password           String
  role               Role

  subscription       Subscription

  organization       Organization? @relation(fields: [organizationID], references: [id])
  organizationID     Int?

  gameUsers GameUser[]

  verified           DateTime?
  provider           String?
  providerId         String?

  verificationCode   VerificationCode?

  subscriptionDate   DateTime
  subscriptionEnd    DateTime
  createdAt          DateTime     @default(now())
  updatedAt          DateTime     @updatedAt
}

model VerificationCode {
  id        Int       @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id])
  userId     Int      @unique 
  code       String
  createdAt  DateTime @default(now())

  @@unique([userId, code])
}

model Organization {
  id        Int       @id @default(autoincrement())
  name      String

  games     Game[]
  users     User[]

  inviteCode String

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Game {
  id        Int       @id @default(autoincrement())

  name      String
  
  gameUsers      GameUser[]

  organization Organization? @relation(fields: [organizationId], references: [id])
  organizationId Int?

  moves     String[]

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model GameUser {
  game      Game   @relation(fields: [gameId], references: [id])
  gameId    Int

  user      User   @relation(fields: [userId], references: [id])
  userId    Int

  color      Color

  @@id([gameId, userId])
}

enum Color {
  WHITE
  BLACK
}

enum Subscription {
  FREE
  PREMIUM
  ORGANIZATION
}

enum Role {
  PLAYER
  ADMIN
}
